{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/adoption-form/adoption-form.component.ts","./src/app/adoption-form/adoption-form.component.html","./src/app/animations.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/data/nepoets.ts","./src/app/error-page/error-page.component.ts","./src/app/error-page/error-page.component.html","./src/app/mat-nepoet-list/mat-nepoet-list-datasource.ts","./src/app/mat-nepoet-list/mat-nepoet-list.component.ts","./src/app/mat-nepoet-list/mat-nepoet-list.component.html","./src/app/nepoet-adoption/nepoet-adoption.component.ts","./src/app/nepoet-adoption/nepoet-adoption.component.html","./src/app/nepoets-list/nepoets-list.component.ts","./src/app/nepoets-list/nepoets-list.component.html","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/app/welcome-page/welcome-page.component.ts","./src/app/welcome-page/welcome-page.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-adoption-form',\r\n  templateUrl: './adoption-form.component.html',\r\n  styleUrls: ['./adoption-form.component.scss']\r\n})\r\nexport class AdoptionFormComponent {\r\n  addressForm = this.fb.group({\r\n    firstName: [null, Validators.required],\r\n    state: [null, Validators.required],\r\n  });\r\n\r\n  hasUnitNumber = false;\r\n\r\n  states = [\r\n    {name: 'squash', abbreviation: 'AL'}\r\n  ];\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  onSubmit() {\r\n    alert('Thanks!');\r\n  }\r\n}\r\n","<form [formGroup]=\"addressForm\" novalidate (ngSubmit)=\"onSubmit()\">\r\n  <mat-card class=\"shipping-card\">\r\n    <mat-card-header>\r\n      <mat-card-title>Shipping Information</mat-card-title>\r\n    </mat-card-header>\r\n    <mat-card-content>\r\n      <!-- <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Company\" formControlName=\"company\">\r\n          </mat-form-field>\r\n        </div>\r\n      </div> -->\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"First name\" formControlName=\"firstName\">\r\n            <mat-error *ngIf=\"addressForm.controls['firstName'].hasError('required')\">\r\n              First name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <!-- <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"Last name\" formControlName=\"lastName\">\r\n            <mat-error *ngIf=\"addressForm.controls['lastName'].hasError('required')\">\r\n              Last name is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address\" formControlName=\"address\"></textarea>\r\n            <mat-error *ngIf=\"addressForm.controls['address'].hasError('required')\">\r\n              Address is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"!hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <button mat-button type=\"button\" (click)=\"hasUnitNumber = !hasUnitNumber\">\r\n            + Add C/O, Apt, Suite, Unit\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"hasUnitNumber\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <textarea matInput placeholder=\"Address 2\" formControlName=\"address2\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput placeholder=\"City\" formControlName=\"city\">\r\n            <mat-error *ngIf=\"addressForm.controls['city'].hasError('required')\">\r\n              City is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div> -->\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <mat-select placeholder=\"State\" formControlName=\"state\">\r\n              <mat-option *ngFor=\"let state of states\" [value]=\"state.abbreviation\">\r\n                {{ state.name }}\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"addressForm.controls['state'].hasError('required')\">\r\n              State is <strong>required</strong>\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <!-- <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-form-field class=\"full-width\">\r\n            <input matInput #postalCode maxlength=\"5\" placeholder=\"Postal Code\" type=\"number\" formControlName=\"postalCode\">\r\n            <mat-hint align=\"end\">{{postalCode.value.length}} / 5</mat-hint>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <mat-radio-group formControlName=\"shipping\">\r\n            <mat-radio-button value=\"free\">Free Shipping</mat-radio-button>\r\n            <mat-radio-button value=\"priority\">Priority Shipping</mat-radio-button>\r\n            <mat-radio-button value=\"nextday\">Next Day Shipping</mat-radio-button>\r\n          </mat-radio-group>\r\n        </div>\r\n      </div> -->\r\n    </mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button color=\"primary\" type=\"submit\">Submit</button>\r\n    </mat-card-actions>\r\n  </mat-card>\r\n</form>\r\n","import {\r\n  animation,\r\n  trigger,\r\n  animateChild,\r\n  group,\r\n  transition,\r\n  animate,\r\n  style,\r\n  query\r\n} from '@angular/animations';\r\n\r\nexport const simpleAnimation = \r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({ opacity: 0 }),\r\n      animate('0.2s', style({ opacity: 1 }))\r\n    ]),\r\n  ]);\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { NepoetsListComponent } from './nepoets-list/nepoets-list.component';\r\nimport { NepoetAdoptionComponent } from './nepoet-adoption/nepoet-adoption.component';\r\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  // { path: '',   redirectTo: '/nepoets-list', pathMatch: 'full' },\r\n  { path: 'nepoets-list', component: NepoetsListComponent, data: {animation: 'ListPage'} },\r\n  { path: 'nepoet-adoption', component: NepoetAdoptionComponent, data: {animation: 'ListPage'} },\r\n  { path: '',  component: WelcomePageComponent, data: {animation: 'HomePage'} },\r\n  { path: '**', component: ErrorPageComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { RouterOutlet } from '@angular/router';\r\n\r\nimport { useAnimation, transition, trigger, style, animate } from '@angular/animations';\r\nimport { simpleAnimation } from './animations';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [ simpleAnimation ]\r\n})\r\n\r\nexport class AppComponent {\r\n  title = 'Nepoets!';\r\n  prepareRoute(outlet: RouterOutlet) {\r\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation;\r\n  }\r\n}\r\n","<app-top-bar></app-top-bar>\r\n<div [@routeAnimations]=\"prepareRoute(outlet)\">\r\n    <router-outlet #outlet = \"outlet\"></router-outlet>\r\n</div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AgGridModule } from 'ag-grid-angular';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { TopBarComponent } from './top-bar/top-bar.component';\r\nimport { NepoetsListComponent } from './nepoets-list/nepoets-list.component';\r\n\r\n// import { MatIcon } from '@angular/material/icon';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ErrorPageComponent } from './error-page/error-page.component';\r\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\r\nimport { NepoetAdoptionComponent } from './nepoet-adoption/nepoet-adoption.component';\r\nimport { MatNepoetListComponent } from './mat-nepoet-list/mat-nepoet-list.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { AdoptionFormComponent } from './adoption-form/adoption-form.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    NepoetsListComponent,\r\n    ErrorPageComponent,\r\n    WelcomePageComponent,\r\n    NepoetAdoptionComponent,\r\n    MatNepoetListComponent,\r\n    AdoptionFormComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AgGridModule.withComponents([]),\r\n    BrowserAnimationsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatRadioModule,\r\n    MatCardModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","export const nepoets = [\r\n    {\r\n        id: 1,\r\n        name: 'roger',\r\n        color: 'blue',\r\n        species: 'bocky',\r\n        img: '../../assets/nepoets/happy/happy_blue_bocky.png' \r\n    },\r\n    {\r\n        id: 2,\r\n        name: 'colonel',\r\n        color: 'yellow',\r\n        species: 'bocky',\r\n        img: '../../assets/nepoets/happy/happy_yellow_bocky.png' \r\n    }\r\n]","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error-page',\r\n  templateUrl: './error-page.component.html',\r\n  styleUrls: ['./error-page.component.scss']\r\n})\r\nexport class ErrorPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>Page not found.</p><br/>\r\n<img class = \"nepImage\" src = \"../../assets/nepoets/sad/sad_blue_kajeek.png\" alt = \"sad bby\"/>\r\n\r\n","import { DataSource } from '@angular/cdk/collections';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, of as observableOf, merge } from 'rxjs';\r\n\r\nimport { nepoets } from '../data/nepoets';\r\n\r\n// TODO: Replace this with your own data model type\r\nexport interface MatNepoetListItem {\r\n  name: string;\r\n  id: number;\r\n  color: string;\r\n  species: string;\r\n}\r\n\r\n// TODO: replace this with real data from your application\r\nconst MATNEPOETS: MatNepoetListItem[] = nepoets;\r\n\r\n/**\r\n * Data source for the MatNepoetList view. This class should\r\n * encapsulate all logic for fetching and manipulating the displayed data\r\n * (including sorting, pagination, and filtering).\r\n */\r\nexport class MatNepoetListDataSource extends DataSource<MatNepoetListItem> {\r\n  data: MatNepoetListItem[] = MATNEPOETS;\r\n  paginator: MatPaginator;\r\n  sort: MatSort;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Connect this data source to the table. The table will only update when\r\n   * the returned stream emits new items.\r\n   * @returns A stream of the items to be rendered.\r\n   */\r\n  connect(): Observable<MatNepoetListItem[]> {\r\n    // Combine everything that affects the rendered data into one update\r\n    // stream for the data-table to consume.\r\n    const dataMutations = [\r\n      observableOf(this.data),\r\n      this.paginator.page,\r\n      this.sort.sortChange\r\n    ];\r\n\r\n    return merge(...dataMutations).pipe(map(() => {\r\n      return this.getPagedData(this.getSortedData([...this.data]));\r\n    }));\r\n  }\r\n\r\n  /**\r\n   *  Called when the table is being destroyed. Use this function, to clean up\r\n   * any open connections or free any held resources that were set up during connect.\r\n   */\r\n  disconnect() {}\r\n\r\n  /**\r\n   * Paginate the data (client-side). If you're using server-side pagination,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getPagedData(data: MatNepoetListItem[]) {\r\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\r\n    return data.splice(startIndex, this.paginator.pageSize);\r\n  }\r\n\r\n  /**\r\n   * Sort the data (client-side). If you're using server-side sorting,\r\n   * this would be replaced by requesting the appropriate data from the server.\r\n   */\r\n  private getSortedData(data: MatNepoetListItem[]) {\r\n    if (!this.sort.active || this.sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const isAsc = this.sort.direction === 'asc';\r\n      switch (this.sort.active) {\r\n        case 'name': return compare(a.name, b.name, isAsc);\r\n        case 'color': return compare(a.color, b.color, isAsc);\r\n        case 'species': return compare(a.species, b.species, isAsc);\r\n        case 'id': return compare(+a.id, +b.id, isAsc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\r\nfunction compare(a: string | number, b: string | number, isAsc: boolean) {\r\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTable } from '@angular/material/table';\r\nimport { MatNepoetListDataSource, MatNepoetListItem } from './mat-nepoet-list-datasource';\r\n\r\n@Component({\r\n  selector: 'app-mat-nepoet-list',\r\n  templateUrl: './mat-nepoet-list.component.html',\r\n  styleUrls: ['./mat-nepoet-list.component.scss']\r\n})\r\nexport class MatNepoetListComponent implements AfterViewInit, OnInit {\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatTable) table: MatTable<MatNepoetListItem>;\r\n  dataSource: MatNepoetListDataSource;\r\n\r\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\r\n  displayedColumns = ['id', 'name', 'color', 'species'];\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatNepoetListDataSource();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.table.dataSource = this.dataSource;\r\n  }\r\n}\r\n","<div class=\"mat-elevation-z8\">\r\n  <table mat-table class=\"full-width-table\" matSort aria-label=\"Elements\">\r\n    <!-- Id Column -->\r\n    <ng-container matColumnDef=\"id\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Id</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.id}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Name Column -->\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Color Column -->\r\n    <ng-container matColumnDef=\"color\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Color</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.color}}</td>\r\n    </ng-container>\r\n\r\n    <!-- Species Column -->\r\n    <ng-container matColumnDef=\"species\">\r\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Species</th>\r\n      <td mat-cell *matCellDef=\"let row\">{{row.species}}</td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n\r\n  <mat-paginator #paginator\r\n      [length]=\"dataSource?.data.length\"\r\n      [pageIndex]=\"0\"\r\n      [pageSize]=\"50\"\r\n      [pageSizeOptions]=\"[25, 50, 100, 250]\">\r\n  </mat-paginator>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-nepoet-adoption',\r\n  templateUrl: './nepoet-adoption.component.html',\r\n  styleUrls: ['./nepoet-adoption.component.scss']\r\n})\r\nexport class NepoetAdoptionComponent implements OnInit {\r\n\r\n  adoptionForm;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  adoptNepoet(response) {\r\n    if (!response) {\r\n      alert(\"that's okay!\");\r\n    }\r\n    else if (response) {\r\n      this.adoptionForm = true;\r\n    }\r\n  }\r\n\r\n  tooManyQuestions() {\r\n    window.close();\r\n  }\r\n\r\n}\r\n","<div>Adoption center!</div>\r\n<div>Would you like to adopt a nepoet?</div>\r\n<br/>\r\n<div>\r\n    <span>\r\n        <button (click) = 'adoptNepoet(true)'>Yes!</button>\r\n    </span>\r\n    <span>\r\n        <button (click) = 'adoptNepoet(false)'>Not right now</button>\r\n    </span>\r\n    <span>\r\n        <button (click) = 'tooManyQuestions()'>Why would I do that?</button>\r\n    </span>\r\n</div>\r\n\r\n<div *ngIf = 'adoptionForm'>\r\n    Oh, that's wonderful! Please fill out the form below to proceed with the adoption.\r\n    <app-adoption-form></app-adoption-form>\r\n</div>","import { APP_ID, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport { nepoets } from '../data/nepoets';\r\n\r\n@Component({\r\n  selector: 'app-nepoets-list',\r\n  templateUrl: './nepoets-list.component.html',\r\n  styleUrls: ['./nepoets-list.component.scss']\r\n})\r\nexport class NepoetsListComponent implements OnInit {\r\n  @ViewChild('agGrid') agGrid: AgGridAngular;\r\n\r\n  nepoets = nepoets;\r\n  private gridApi;\r\n  private gridColumnApi;\r\n  displayNepoet = false;\r\n  selectedRows;\r\n\r\n  columnDefs = [\r\n    { field: 'name' },\r\n    { field: 'color' },\r\n    { field: 'species' }\r\n  ];\r\n\r\n  defaultColDef = {\r\n    resizable: true,\r\n    sortable: true,\r\n    filter: true,\r\n    width: 125\r\n  };\r\n\r\n  rowData: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.rowData = this.nepoets;\r\n  }\r\n\r\n  onFirstDataRendered(params) {\r\n    params.api.sizeColumnsToFit();\r\n  }\r\n\r\n  onGridReady(params) {\r\n    this.gridApi = params.api;\r\n    this.gridColumnApi = params.columnApi;\r\n  }\r\n\r\n  onSelectionChanged(event) {\r\n    this.displayNepoet = true;\r\n    this.selectedRows = this.gridApi.getSelectedRows();\r\n    console.log(this.selectedRows);\r\n    console.log(this.displayNepoet);\r\n    return this.selectedRows;\r\n  }\r\n\r\n  onPlayButton(response) {\r\n    console.log(response);\r\n    if (response) {\r\n      this.selectedRows[0].img = '../../assets/nepoets/happy/happy_' \r\n        + this.selectedRows[0].color + '_' \r\n        + this.selectedRows[0].species + '.png';\r\n      alert(\"yay play time!\");\r\n    }\r\n    else if (!response) {\r\n      this.selectedRows[0].img = '../../assets/nepoets/sad/sad_' \r\n        + this.selectedRows[0].color + '_' \r\n        + this.selectedRows[0].species + '.png';\r\n      alert(\"look what you did it\");\r\n    }\r\n  }\r\n}\r\n","<h2>Your Nepoets!</h2>\r\n<!-- <img class = \"nepImage\" src = \"../../assets/nepoets/happy/kajeek.png\" alt = \"happy bby\"/> -->\r\n\r\n<ag-grid-angular\r\n    class=\"ag-theme-alpine\"\r\n    [rowData]=\"rowData\"\r\n    [columnDefs]=\"columnDefs\"\r\n    [defaultColDef]=\"defaultColDef\"\r\n    rowSelection = \"single\"\r\n    (selectionChanged)=\"onSelectionChanged($event)\"\r\n    (gridReady)=\"onGridReady($event)\"\r\n>\r\n</ag-grid-angular>\r\n\r\n<div *ngIf=\"displayNepoet\" class = \"displayNepoet\">\r\n    <img src = '{{selectedRows[0].img}}' />\r\n    \r\n    <div>\r\n        <span>Do you want to play with {{selectedRows[0].name}}? </span>\r\n        <span>\r\n            <button (click)=\"onPlayButton(true)\">Yes!</button>\r\n        </span>\r\n        <span>\r\n            <button (click)=\"onPlayButton(false)\">Nah fam</button>\r\n        </span>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-top-bar',\r\n  templateUrl: './top-bar.component.html',\r\n  styleUrls: ['./top-bar.component.scss']\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<a [routerLink]=\"['/']\">\r\n    <img class = \"logo\" src = \"../../assets/logop.png\" alt = \"nepoets\"/>\r\n</a>\r\n\r\n<div>\r\n    <a [routerLink]=\"['/nepoets-list']\" class=\"button fancy-button navbar\">My Nepoets</a>\r\n    <a [routerLink]=\"['/nepoet-adoption']\" class=\"button fancy-button navbar\">Adopt</a>\r\n    <a [routerLink]=\"['/error']\" class=\"button fancy-button navbar\">Login</a>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-welcome-page',\r\n  templateUrl: './welcome-page.component.html',\r\n  styleUrls: ['./welcome-page.component.scss']\r\n})\r\nexport class WelcomePageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<app-mat-nepoet-list></app-mat-nepoet-list>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}